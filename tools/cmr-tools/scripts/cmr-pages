#!/usr/bin/perl
use strict;
use warnings;
use File::Basename;
use Encode;
use XML::LibXML;

# Generate CMR records for page texts based on 

foreach my $dir (@ARGV) {

    # Parse each XML file
}


my $cmr_xml = shift(@ARGV);
my $out_dir = dirname($cmr_xml);
my $xml = XML::LibXML->new()->parse_file($cmr_xml);

# TODO: validate input CMR

-d ($out_dir) or die;

foreach my $dir (@ARGV) {
    print("$dir\n");
    my $doc = XML::LibXML::Document->new('1.0', 'UTF-8');
    my $recordset = $doc->createElement('recordset');
    $recordset->setAttribute('version', '1.0');
    $doc->setDocumentElement($recordset);

    my $key = basename($dir);
    opendir(DIR, $dir) or die;
    foreach my $file (sort(readdir(DIR))) {
        next unless ($file =~ /^(\Q$key\E) (\d{4})\.txt$/);

        my $filename = "$dir/$file";
        my $page = $2;
        open(FILE, "<$filename") or die;
        my $content = decode_utf8(join('', <FILE>));
        close $file;

        # Create page record...
        my $record = ($xml->findnodes("/recordset/record/key[text() = '$key']/.."))->[0];
        die("No record for $key") unless ($record);
        my $cmr = $record->cloneNode(1);
        $doc->adoptNode($cmr);

        # Modify the record....
        my $node;
        $node = ($cmr->findnodes("type"))->[0];
        replaceElement($doc, $node, 'page', {});
        $node = ($cmr->findnodes("key"))->[0];
        $node->appendTextNode(".$page");
        $node = ($cmr->findnodes("label"))->[0];
        insertAfter($doc, $cmr, $node, 'seq', sprintf("%d", $page), {});
        insertAfter($doc, $cmr, $node, 'pkey', $key, {});
        replaceElement($doc, $node, sprintf('p. %d', $page), {});
        $node = ($cmr->findnodes("resource/canonicalUri"))->[0];
        replaceElement($doc, $node, sprintf('%s&page=%d', $node->findvalue('text()'), $page), {});

        # Add the text and remove the other descriptive fields
        my $description = ($cmr->findnodes('description'))->[0];
        $description->removeChildNodes();
        if ($content) {
            die("No description for $key") unless ($description);
            my $text = $doc->createElement('text');
            $text->setAttribute('type', 'content');
            my $lang = $record->findvalue('lang[position()=1]');
            if ($lang) {
                $text->setAttribute('lang', $lang);
            }
            $text->appendChild($doc->createTextNode($content));
            $description->appendChild($text);
        }
        $recordset->appendChild($cmr);
    }
    closedir(DIR);

    # TODO Validate output...
    
    my $out_file = "$out_dir/$key:text.xml";
    $doc->toFile($out_file, 1) or die("$out_file: $!");
}


sub replaceElement
{
    my($doc, $element, $text, $attributes) = @_;
    my $node = $doc->createElement($element->nodeName());
    while (my($attribute, $value) = each(%{$attributes})) {
        $node->setAttribute($attribute, $value);
    }
    $node->appendChild($doc->createTextNode($text));
    $element->replaceNode($node);
}

sub insertAfter
{
    my($doc, $parent, $ref, $name, $text, $attributes) = @_;
    my $node = $doc->createElement($name);
    while (my($attribute, $value) = each(%{$attributes})) {
        $node->setAttribute($attribute, $value);
    }
    $node->appendChild($doc->createTextNode($text));
    $parent->insertAfter($node, $ref);
}
