#!/usr/bin/perl

use strict;
use warnings;
use lib "/opt/cap-libs/perl/lib/perl5";
use File::Basename;
use Getopt::Long;
use LWP::UserAgent;
use HTTP::Request::Common;

my $prog  = basename($0);
my $usage = "Usage: $prog [-solr=URL] commit|delete|rollback [field:pattern]\n";
my $solr  = 'http://localhost:8983/solr/update';
my $lwp   = LWP::UserAgent->new(agent => "CAP Solr utility");

GetOptions(
    'solr=s' => \$solr,
) or die ($usage);

my $action = shift(@ARGV) || die($usage);
my $message;

if ($action eq 'commit') {
    $message = "<commit/>";
}
elsif ($action eq 'delete') {
    my $query = shift(@ARGV) or die("delete requires an argument 'field:value'\n");
    $message = "<delete><query>$query</query></delete>";
}
elsif ($action eq 'rollback') {
    $message = "<rollback/>";
}

print("Posting request to $solr ... ");
my $response = $lwp->request(POST $solr, Content_Type => "text/xml", Content => $message);
if ($response->is_success) {
    print("OK\n");
}
else {
    die("FAIL\n Error code:" . $response->code . ": " . $response->message . "\n");
}

if ($action eq 'delete') {
    print("Run '$0 commit' to commit your changes; '$0 rollback' to roll back.\n");
}

exit 0;
