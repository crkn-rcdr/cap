# DO NOT EDIT THIS FILE
#
# It is recommended that you do not edit this file. Site-specific
# information and custom changes should be placed in a file called
# cap_local.conf, which will override declarations made here.

# For Boolean values, you can use "1", "true", "yes", and "on"
# interchangeably. Likewise, you can use "0", "false", "no" and "off".


<cookies>
    persist = persist
    lang = lang
</cookies>



#
# BASIC CONFIGURATION
#

# Name of the Catalyst application
name CAP

# The application root directory
# Note: This is relative to the current directory when you run
# root = root

# Name of the default view to render
default_view Default

# Set the default encoding of everything to utf8
# Replaces the deprecated load of Catalyst::Plugin::Unicode::Encoding

encoding utf8

#
# USER MANAGEMENT
#

# Re-parse user data this many requests
session_refresh_interval 20

#
# SUBSCRIPTIONS & TAX RECEIPTS
#

# Send an account renewal reminder email message to any trial or paid
# account that expires in this many business days, where a business day is
# whatever Date::Manip thinks it is (assume Monday-Friday).
expiring_acct_reminder = 5

#set the number of days a new user has to confirm his subscription 
confirm_grace_period = 30

#
# EMAIL
#

# An array of parameters to pass to the mailer. For standard SMTP, the
# first value should be 'SMTP' and the second the name of the mail host.
# These parameters should be sent in cap_local.conf instead of here. You
# cannot set them in both places and hope one overrides the latter.
#email = SMTP
#email = localhost

# What address system messages should be from
# email_from = "Do Not Reply" <noreply@canadiana.ca>

#
# VIEWS
#

# A set of views that are available, in addition to the default view,
<fmt "rdf">
    view RDF
    content_type application/rdf+xml
</fmt>

<fmt "ajax">
    view Ajax
    content_type text/plain
</fmt>

<fmt "json">
    view JSON
    content_type text/plain
</fmt>

<fmt "csv">
    view CSV
    content_type text/csv
    actions reports/user/subscriptions
</fmt>

#
# MYSQL
#

# MySQL database connection information.
<Component Model::DB>
    schema_class CAP::Schema
    <connect_info>
        dsn dbi:mysql:cap
        user cap
        password ""
    </connect_info>
</Component>

#
# Collections
#

<Component Model::Collections>
    path __path_to(conf/collections.json)__
</Component>

#
# Depositors
#

<Component Model::Depositors>
    path __path_to(conf/depositors.json)__
</Component>

#
# Access::Search
#
<Component Model::Access::Search>
    server = http://localhost:8983/solr/cosearch
</component>

#
# Access::Presentation
#
<Component Model::Access::Presentation>
    sitemap_node_limit = 500
</Component>

#
# Access::Content
#

<Component Model::Access::Derivative>
  <config>
    # Translate the s parameter into image bounding box dimensions.
    default_size = 800
    <size>
      t = 100
      1 = 800
      2 = 1024
      3 = 1296
      4 = 1600
      5 = 2048
      6 = 2560
    </size>

    # Translate the r parameter into rotation (in degrees). The default is
    # no rotation.
    <rotate>
      0 = 0
      1 = 90
      2 = 180
      3 = 270
    </rotate>
  </config>
</Component>

# Paypal module needs configuration similar to the following, which is Canadiana's
# sandbox configuration.
<payment paypal>
    username  = seller_1298561993_biz_api1.canadiana.ca
    password  = 1298562002
    signature = AWWNmUQE8z7.L28t4eRmgnkEAPJgA4Bj.muFtwf3iFhZFI1RV6CK9Q2-
    sandbox   = 1
</payment>

default_url = http://www.canadiana.ca

# Whether we are in production, which determines whether certain things
# will run.  Currently this includes:
# - generate tax receipts, and email them
# - generate emails to inform people their account is about to expire.
#
# This is a filename: if option exists && file it points to exists  ==> we are in production
productionflagfile = /var/run/cap/production

<secure>
 # secure.canadiana.ca
 host = secure.canadiana.localhost
 protocol = http
</secure>

# removing config from mysql, step one
<user_roles>
  administrator = "do anything"
  content       = "manage content and metadata"
  reports       = "view system status and usage reports"
  iiif_preview  = "preview IIIF functionality"
</user_roles>
