#!/usr/bin/perl
use strict;
use warnings;
use Encode;
use File::Basename;
use FindBin;
use lib "$FindBin::Bin/../lib";
use CAP;

=head1 new-titles

Compile a list of titles that are new (are not part of any collection).

=head2 Examples

Index new or updated CMRs into Solr:

find tdr-root -mindepth 3 -maxdepth 3 | new-bags solr | /opt/cmr/current/tools/solr-ingest -live -v

=cut

my $c = new CAP;
my %institutions = ();
my $action = shift(@ARGV) || "default";

warn("Reading from STDIN\n");
while (my $path = <STDIN>) {
    chomp($path);
    my $cmr = join('/', $path, 'data', 'cmr.xml');
    my($contributor, $identifier) = split(/\./, basename($path), 2);

    # Skip deleted atchives (ones with no CMR file)
    next unless (-f $cmr);

    # Look up and cache the institution id if we don't already know it.
    if (! $institutions{$contributor}) {
        my $institution = $c->model('DB::Institution')->find({ code => $contributor });
        $institutions{$contributor} = $institution->id if ($institution);
    }

    # Get the institution id. Skip this item if there isn't one.
    my $institution = $institutions{$contributor};
    if (! $institution) {
        warn("Can't find an institution for contriburtor '$contributor'\n");
        next;
    }

    # Check whether a document of this name exists.
    my $document = $c->model('DB::Documents')->find(
        { 'title_id.institution_id' => $institution, 'me.identifier' => $identifier },
        { join => 'title_id' }
    );

    # Check whether a title exists (if it is not a document).
    my $title = $c->model('DB::Titles')->find({ institution_id => $institution, identifier => $identifier });


    # Look up  the item in Solr
    my $solr;
    my $solr_status = 'null'; # Status is null (no such title), missing (not indexed at all), stale (Solr record older than CMR) or ok (Solr record newer than CMR)
    if ($document) {
        my $key = sprintf("%s.%s", $contributor, $document->identifier);
        $solr = $c->model('Solr')->document($key);
        $solr_status = 'missing';
    }
    elsif ($title) {
        my $key = sprintf("%s.%s", $contributor, $title->identifier);
        $solr = $c->model('Solr')->document($key);
        $solr_status = 'missing';
    }

    if ($solr && $solr->found) {
        $solr->record->timestamp =~ /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/;
        my $solr_mtime = DateTime->new({year => $1, month => $2, day => $3, hour => $4, minute => $5, second => $6, time_zone => '+0000'});
        my @stat = stat($cmr);
        my $cmr_mtime = DateTime->from_epoch(epoch => $stat[9]);
        my $comp = DateTime->compare($cmr_mtime, $solr_mtime);
        if ($comp >= 0) {
            $solr_status = 'stale';
        }
        else {
            $solr_status = 'ok';
        }
    }

    # Print stuff according to the command line action

    # Print CMR records that aren't in the CAP database.
    if ($action eq 'cmr') {
        print("$cmr\n") unless ($document || $title);
    }

    # Print CMR records that are not up to date in Solr
    elsif ($action eq 'solr') {
        print("$cmr\n") unless ($solr_status eq 'ok' || $solr_status eq 'null');
    }

    # Default: print AIPs that aren't in the CAP database.
    else {
        print("$path\n") unless ($document || $title);
    }



    ## Find whether or not the title already exists. Skip those that do.
    #my $document = $c->model('DB::Titles')->find({ institution_id => $institution, identifier => $identifier });
    #next if ($document);

    # Find out if this is probably a
    #print("$path\n") unless ($document);

}
