#!/usr/bin/perl
use strict;
use warnings;
use Encode;
use File::Basename;
use FindBin;
use lib "$FindBin::Bin/../lib";
use CAP;

=head1 portal-admin

Add an AIP to one or more portals (if it is a title).

Reads lines from STDIN that look like this:

PATH [+]portal [...]

where portal is the name of the portal to add the title to and + indicates that it will be indexed as well

=cut

my $c = CAP->new();
my %institutions = ();

warn("Reading from STDIN\n");
while (my $path = <STDIN>) {
    chomp($path);
    my($aip, @portals) = split(/\s+/, $path);
    my($contributor, $identifier) = split(/\./, basename($aip), 2);

    # Don't do anything if no portals are specified
    next unless (@portals);

    # Look up and cache the institution id if we don't already know it.
    if (! $institutions{$contributor}) {
        my $institution = $c->model('DB::Institution')->find({ code => $contributor });
        $institutions{$contributor} = $institution->id if ($institution);
    }

    # Get the institution id. Skip this item if there isn't one.
    my $institution = $institutions{$contributor};
    if (! $institution) {
        warn("Can't find an institution for contriburtor '$contributor'\n");
        next;
    }

    # Check whether a title exists. Skip things that are not titles.
    my $title = $c->model('DB::Titles')->find({ institution_id => $institution, identifier => $identifier });
    next unless ($title);

    # Add this title to the requestede collections
    foreach my $portal (@portals) {
        my $action = substr($portal, 0, 1);
        if ($action eq '+') {
            print("Adding $contributor.$identifier to $portal (hosted)\n");
            eval {
                my $record = $c->model('DB::PortalsTitles')->update_or_create({
                    portal_id => substr($portal, 1),
                    title_id => $title->id,
                    hosted => 1
                });
            };
            if ($@) {
                die("Update failed: $@\n");
            }
        }
        elsif ($action eq '-') {
            print("Removing $contributor.$identifier from $portal\n");
            my $record = $c->model('DB::PortalsTitles')->find({ portal_id => substr($portal, 1), title_id => $title->id});
            $record->delete() if ($record);
        }
        else {
            print("Adding $contributor.$identifier to $portal (indexed)\n");
            eval {
                my $record = $c->model('DB::PortalsTitles')->update_or_create({
                    portal_id => $portal,
                    title_id => $title->id,
                    hosted => 0
                });
            };
            if ($@) {
                die("Update failed: $@\n");
            }
        }
    }
}
