<div class="support">

<h2>Canadiana API Documentation (DRAFT)</h2>

[% IF lang == 'fr' %]
Ce document de travail n'est disponible qu'en anglais. La version finale
sera disponible en fran√ßais
[% END %]

<h3>Status</h3>

<p>Version 0.3</p>

<p>The Canadiana API and this documentation is still a work in
progress. Both should be considered experimental.</p>

<h3>Synopsis</h3>

<p>Any search query can be turned into a Web service request by appending
the parameter <code>fmt=json</code> to retrieve a JSON object.</p>

<ul>
  <li><a href="[% c.uri_for_action('search/index', { q => 'railroads' }) | xhtml %]">search?q=railroads</a></li>
  <li><a href="[% c.uri_for_action('search/index', { q => 'railroads', fmt => 'xml' }) | xhtml %]">search?q=railroads&amp;fmt=xml</a></li>
  <li><a href="[% c.uri_for_action('search/index', { q => 'railroads', fmt => 'json' }) | xhtml %]">search?q=railroads&amp;fmt=json</a></li>
</ul>

<h3>Results Paging</h3>

<p>To retrieve a specific page of results from the result set, add the
page number to the end of the URL. If omitted, the first page is
returned:</p>

<ul>
  <li><a href="[% c.uri_for_action('search/index', { q => 'railroads', fmt => 'json' }) | xhtml %]">search?q=railroads&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/result_page', '2', { q => 'railroads', fmt => 'json' }) | xhtml %]">search/2?q=railroads&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/result_page', '3', { q => 'railroads', fmt => 'json' }) | xhtml %]">search/3?q=railroads&amp;fmt=json</a></li>
</ul>

<h3>Text Queries</h3>

<p>For general text queries (all bibliographic metadata, abstracts, and
full text) use the <code>q</code> parameter with one or more terms:</p>

<ul>
  <li><a href="[% c.uri_for_action('search/index', { q => 'railroads', fmt => 'json' }) | xhtml %]">search?q=railroads&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/index', { q => 'rail yards', fmt => 'json' }) | xhtml %]">search?q=rail yards&amp;fmt=json</a></li>
</ul>

<p>Search for phrases by enclosing them in quotes: "". Use * and ? as wildcard characters in the middle or at the end of a
work (not phrases). Prefix a term with - to require it not be present (NOT
operator). Separate terms with | to match on either term (OR operator):</p>

<ul>
  <li><a href="[% c.uri_for_action('search/index', { q => 'rail*', fmt => 'json' }) | xhtml %]">search?q=rail*&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/index', { q => '"rail yards"', fmt => 'json' }) | xhtml %]">search?q="rail yards"&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/index', { q => '"rail yards" -railway', fmt => 'json' }) | xhtml %]">search?q="rail yards" -railway&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/index', { q => 'rail yard | car', fmt => 'json' }) | xhtml %]">search?q=rail yard | car&amp;fmt=json</a></li>
</ul>

<h3>Field-Limited Queries</h3>

<p>To limit queries to a particular field, you can either prefix a term
with the field name and a colon or use the feld name as a separate query
parameter. Mixing and matching is also allowed:</p>

<ul>
  <li><a href="[% c.uri_for_action('search/index', { q => 'su:railroads', fmt => 'json' }) | xhtml %]">search?q=su:railroads&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/index', { su => 'railroads', fmt => 'json' }) | xhtml %]">search?su=railroads&amp;fmt=json</a></li>
  <li><a href="[% c.uri_for_action('search/index', { su => 'railroads', q => 'su:Newfoundland' fmt => 'json' }) | xhtml %]">search?su=railroads&q=su:Newfoundland&amp;fmt=json</a></li>
</ul>

<p>Supported text fields include:</p>

<ul>
  <li>q: all text fields (including full text)</li>
  <li>au: author/creator names</li>
  <li>ti: titles</li>
  <li>su: subject headings/keywords</li>
</ul>

<p>Additionally, the following controlled value fields are supported:</p>

<ul>
  <li>contributor: contributor code</li>
  <li>media: media type (<code>text|image|audio|video|data|plaintext</code>)</li>
  <li>lang: document language (ISO 693-3 code)</li>
  <li>set: index subset</li>
  <li>t: record type (<code>any|document|series|page|default</code> - default is documents and series)</li>
  <li>key: record unique key</li>
  <li>pkey: record parent key</li>
</ul>

<h3>Date Range Limiting</h3>

<p>Use the <code>df</code> and <code>dt</code> parameters to limit a
result set to documents published within the given range of years:</p>

<ul>
  <li><a href="[% c.uri_for_action('search/index', { q => 'railroads', df => '1800', dt => '1820', fmt => 'json' }) | xhtml %]">search?q=railroads&amp;df=1800&amp;dt=1820&amp;fmt=json</a></li>
</ul>

<h3>Result Sorting</h3>

<p>Results are sorted by relevance ranking by default. Add the parameter
<code>sort=oldest</code> or <code>sort=newest</code> to sort by
publication date in ascending or descending order.</p>

<h3>Retrieving Individual Records</h3>

<p>You can also retrieve individual item records by key:

<ul>
  <li><a href="[% c.uri_for_action('view/key', 'oocihm.00001', { fmt => json }) %]">view/oocihm.00001&amp;fmt=json</a></li>
</ul>

<p>You can choose to retrieve the full text for the record by adding the
parameter <code>api_text=1</code>. Since some documents might have a very
large amount of text (many megabytes) it is recommended that this option
not be used routinely, but only where the full text is specifically
desired.</p>

<h3>Response Structure</h3>

<ul>
  <li><a href="[% c.uri_for_action('support', 'api_search_json') %]">Search query: JSON</a></li>
</ul>


</div>
