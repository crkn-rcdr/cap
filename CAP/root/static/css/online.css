:root{--blue: #007bff;--indigo: #6610f2;--purple: #6f42c1;--pink: #e83e8c;--red: #dc3545;--orange: #fd7e14;--yellow: #ffc107;--green: #28a745;--teal: #20c997;--cyan: #17a2b8;--white: #fff;--gray: #6c757d;--gray-dark: #343a40;--primary: #1d808b;--secondary: #6c757d;--success: #28a745;--info: #17a2b8;--warning: #ffc107;--danger: #dc3545;--light: #f8f9fa;--dark: #222;--breakpoint-xs: 0;--breakpoint-sm: 576px;--breakpoint-md: 768px;--breakpoint-lg: 992px;--breakpoint-xl: 1200px;--font-family-sans-serif: "Roboto", sans-serif;--font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace}*,*::before,*::after{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}article,aside,figure,footer,header,main,nav,section{display:block}body{margin:0;font-family:"Roboto",sans-serif;font-size:1rem;font-weight:400;line-height:1.5;color:#222;text-align:left;background-color:#fff}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}b,strong{font-weight:bolder}small{font-size:80%}a{color:#1d808b;text-decoration:none;background-color:transparent}a:hover{color:#10464c;text-decoration:underline}a:not([href]){color:inherit;text-decoration:none}a:not([href]):hover{color:inherit;text-decoration:none}pre,code{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}button,[type="button"],[type="submit"]{-webkit-appearance:button}button:not(:disabled),[type="button"]:not(:disabled),[type="submit"]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{padding:0;border-style:none}input[type="radio"],input[type="checkbox"]{box-sizing:border-box;padding:0}input[type="date"],input[type="time"]{-webkit-appearance:listbox}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{outline-offset:-2px;-webkit-appearance:none}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}summary{display:list-item;cursor:pointer}[hidden]{display:none !important}h1,h2,h3,h4,h5,.h1,.h2,.h3,.h4,.h5{margin-bottom:.5rem;font-weight:500;line-height:1.2}h1,.h1{font-size:2.5rem}h2,.h2{font-size:2rem}h3,.h3{font-size:1.75rem}h4,.h4{font-size:1.5rem}h5,.h5{font-size:1.25rem}.lead{font-size:1.25rem;font-weight:300}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,0.1)}small,.small{font-size:80%;font-weight:400}.list-unstyled{padding-left:0;list-style:none}.figure{display:inline-block}code{font-size:87.5%;color:#e83e8c;word-wrap:break-word}a>code{color:inherit}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container{max-width:540px}}@media (min-width: 768px){.container{max-width:720px}}@media (min-width: 992px){.container{max-width:960px}}@media (min-width: 1200px){.container{max-width:1140px}}.container-md,.container-lg{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container{max-width:540px}}@media (min-width: 768px){.container,.container-md{max-width:720px}}@media (min-width: 992px){.container,.container-md,.container-lg{max-width:960px}}@media (min-width: 1200px){.container,.container-md,.container-lg{max-width:1140px}}.row{display:-webkit-box;display:flex;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.col,.col-sm-4,.col-md-3,.col-md-4,.col-md-8,.col-md-9,.col-lg-3,.col-lg-5,.col-lg-8,.col-lg-9,.col-lg-12,.col-lg{position:relative;width:100%;padding-right:15px;padding-left:15px}.col{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%}.row-cols-1>*{-webkit-box-flex:0;flex:0 0 100%;max-width:100%}@media (min-width: 576px){.row-cols-sm-2>*{-webkit-box-flex:0;flex:0 0 50%;max-width:50%}.col-sm-4{-webkit-box-flex:0;flex:0 0 33.33333%;max-width:33.33333%}}@media (min-width: 768px){.row-cols-md-3>*{-webkit-box-flex:0;flex:0 0 33.33333%;max-width:33.33333%}.col-md-3{-webkit-box-flex:0;flex:0 0 25%;max-width:25%}.col-md-4{-webkit-box-flex:0;flex:0 0 33.33333%;max-width:33.33333%}.col-md-8{-webkit-box-flex:0;flex:0 0 66.66667%;max-width:66.66667%}.col-md-9{-webkit-box-flex:0;flex:0 0 75%;max-width:75%}}@media (min-width: 992px){.col-lg{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%}.row-cols-lg-3>*{-webkit-box-flex:0;flex:0 0 33.33333%;max-width:33.33333%}.row-cols-lg-4>*{-webkit-box-flex:0;flex:0 0 25%;max-width:25%}.col-lg-3{-webkit-box-flex:0;flex:0 0 25%;max-width:25%}.col-lg-5{-webkit-box-flex:0;flex:0 0 41.66667%;max-width:41.66667%}.col-lg-8{-webkit-box-flex:0;flex:0 0 66.66667%;max-width:66.66667%}.col-lg-9{-webkit-box-flex:0;flex:0 0 75%;max-width:75%}.col-lg-12{-webkit-box-flex:0;flex:0 0 100%;max-width:100%}}.form-control{display:block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;-webkit-transition:border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.form-control{-webkit-transition:none;transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.form-control:focus{color:#495057;background-color:#fff;border-color:#4eccda;outline:0;box-shadow:0 0 0 .2rem rgba(29,128,139,0.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}select.form-control[size],select.form-control[multiple]{height:auto}.form-group{margin-bottom:1rem}.form-row{display:-webkit-box;display:flex;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*="col-"]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input[disabled] ~ .form-check-label,.form-check-input:disabled ~ .form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-inline{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row wrap;-webkit-box-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width: 576px){.form-inline label{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-webkit-box;display:flex;-webkit-box-flex:0;flex:0 0 auto;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row wrap;-webkit-box-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .input-group,.form-inline .custom-select{width:auto}.form-inline .form-check{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;flex-shrink:0;margin-top:0;margin-right:.25rem;margin-left:0}}.btn{display:inline-block;font-weight:400;color:#222;text-align:center;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;-webkit-transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.btn{-webkit-transition:none;transition:none}}.btn:hover{color:#222;text-decoration:none}.btn:focus,.btn.focus{outline:0;box-shadow:0 0 0 .2rem rgba(29,128,139,0.25)}.btn.disabled,.btn:disabled{opacity:.65}a.btn.disabled{pointer-events:none}.btn-primary{color:#fff;background-color:#1d808b;border-color:#1d808b}.btn-primary:hover{color:#fff;background-color:#16636b;border-color:#145961}.btn-primary:focus,.btn-primary.focus{color:#fff;background-color:#16636b;border-color:#145961;box-shadow:0 0 0 .2rem rgba(63,147,156,0.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#1d808b;border-color:#1d808b}.btn-primary:not(:disabled):not(.disabled):active,.btn-primary:not(:disabled):not(.disabled).active{color:#fff;background-color:#145961;border-color:#124f56}.btn-primary:not(:disabled):not(.disabled):active:focus,.btn-primary:not(:disabled):not(.disabled).active:focus{box-shadow:0 0 0 .2rem rgba(63,147,156,0.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light:focus,.btn-light.focus{color:#212529;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 .2rem rgba(216,217,219,0.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled):active,.btn-light:not(:disabled):not(.disabled).active{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled):active:focus,.btn-light:not(:disabled):not(.disabled).active:focus{box-shadow:0 0 0 .2rem rgba(216,217,219,0.5)}.btn-outline-primary{color:#1d808b;border-color:#1d808b}.btn-outline-primary:hover{color:#fff;background-color:#1d808b;border-color:#1d808b}.btn-outline-primary:focus,.btn-outline-primary.focus{box-shadow:0 0 0 .2rem rgba(29,128,139,0.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#1d808b;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled):active,.btn-outline-primary:not(:disabled):not(.disabled).active{color:#fff;background-color:#1d808b;border-color:#1d808b}.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.btn-outline-primary:not(:disabled):not(.disabled).active:focus{box-shadow:0 0 0 .2rem rgba(29,128,139,0.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:focus,.btn-outline-secondary.focus{box-shadow:0 0 0 .2rem rgba(108,117,125,0.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled):active,.btn-outline-secondary:not(:disabled):not(.disabled).active{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.btn-outline-secondary:not(:disabled):not(.disabled).active:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,0.5)}.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.collapse:not(.show){display:none}.btn-group{position:relative;display:-webkit-inline-box;display:inline-flex;vertical-align:middle}.btn-group>.btn{position:relative;-webkit-box-flex:1;flex:1 1 auto}.btn-group>.btn:hover{z-index:1}.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active{z-index:1}.btn-toolbar{display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child){margin-left:-1px}.btn-group>.btn:not(:last-child):not(.dropdown-toggle),.btn-group>.btn-group:not(:last-child)>.btn{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-bottom-left-radius:0}.input-group{position:relative;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-align:stretch;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.custom-select{position:relative;-webkit-box-flex:1;flex:1 1 0%;min-width:0;margin-bottom:0}.input-group>.form-control+.form-control,.input-group>.form-control+.custom-select,.input-group>.custom-select+.form-control,.input-group>.custom-select+.custom-select{margin-left:-1px}.input-group>.form-control:focus,.input-group>.custom-select:focus{z-index:3}.input-group>.form-control:not(:last-child),.input-group>.custom-select:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.form-control:not(:first-child),.input-group>.custom-select:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append{display:-webkit-box;display:flex}.input-group-append .btn{position:relative;z-index:2}.input-group-append .btn:focus{z-index:3}.input-group-append .btn+.btn{margin-left:-1px}.input-group-append{margin-left:-1px}.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn{border-top-left-radius:0;border-bottom-left-radius:0}.custom-select{display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem 1.75rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/8px 10px;border:1px solid #ced4da;border-radius:.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#4eccda;outline:0;box-shadow:0 0 0 .2rem rgba(29,128,139,0.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size="1"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.custom-select{-webkit-transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-select{-webkit-transition:none;transition:none}}.nav{display:-webkit-box;display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:hover,.nav-link:focus{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:hover,.nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.card{position:relative;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-body{-webkit-box-flex:1;flex:1 1 auto;min-height:1px;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,0.03);border-top:1px solid rgba(0,0,0,0.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-img-top{flex-shrink:0;width:100%}.card-img-top{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.pagination{display:-webkit-box;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#1d808b;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#10464c;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;outline:0;box-shadow:0 0 0 .2rem rgba(29,128,139,0.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:3;color:#fff;background-color:#1d808b;border-color:#1d808b}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem;-webkit-transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.badge{-webkit-transition:none;transition:none}}a.badge:hover,a.badge:focus{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:hover,a.badge-secondary:focus{color:#fff;background-color:#545b62}a.badge-secondary:focus,a.badge-secondary.focus{outline:0;box-shadow:0 0 0 .2rem rgba(108,117,125,0.5)}.list-group{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:hover,.list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#222;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#1d808b;border-color:#1d808b}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-flush .list-group-item{border-right-width:0;border-left-width:0;border-radius:0}.list-group-flush .list-group-item:first-child{border-top-width:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom-width:0}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:"Roboto",sans-serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.bg-dark{background-color:#222 !important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#090909 !important}.d-inline-block{display:inline-block !important}.d-flex{display:-webkit-box !important;display:flex !important}.flex-column{-webkit-box-orient:vertical !important;-webkit-box-direction:normal !important;flex-direction:column !important}.flex-grow-1{-webkit-box-flex:1 !important;flex-grow:1 !important}.justify-content-center{-webkit-box-pack:center !important;justify-content:center !important}.float-right{float:right !important}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.h-100{height:100% !important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:"";background-color:rgba(0,0,0,0)}.mb-0{margin-bottom:0 !important}.mr-1{margin-right:.25rem !important}.mt-2{margin-top:.5rem !important}.mr-2{margin-right:.5rem !important}.mb-2{margin-bottom:.5rem !important}.mt-3{margin-top:1rem !important}.mr-3{margin-right:1rem !important}.mb-3{margin-bottom:1rem !important}.ml-3{margin-left:1rem !important}.mt-4{margin-top:1.5rem !important}.mb-4{margin-bottom:1.5rem !important}.pr-1{padding-right:.25rem !important}.p-3{padding:1rem !important}.py-3{padding-top:1rem !important}.py-3{padding-bottom:1rem !important}.px-4{padding-right:1.5rem !important}.px-4{padding-left:1.5rem !important}.mt-auto,.my-auto{margin-top:auto !important}.my-auto{margin-bottom:auto !important}.ml-auto{margin-left:auto !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media (min-width: 992px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}}.font-weight-bold{font-weight:700 !important}.text-white{color:#fff !important}.text-primary{color:#1d808b !important}a.text-primary:hover,a.text-primary:focus{color:#10464c !important}.visible{visibility:visible !important}@media print{*,*::before,*::after{text-shadow:none !important;box-shadow:none !important}a:not(.btn){text-decoration:underline}pre{white-space:pre-wrap !important}pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px !important}.container{min-width:992px !important}.badge{border:1px solid #000}.table{border-collapse:collapse !important}.table td,.table th{background-color:#fff !important}}.hidden{display:none !important}#imageCache{position:absolute;top:-9999px;height:1px;overflow:hidden}header{background-color:#1d808b;color:#fff}header a{color:#fff}header a:hover{color:#fff}.header-title{position:relative;width:100%;padding-right:15px;padding-left:15px;-webkit-box-flex:0;flex:0 0 100%;max-width:100%}@media (min-width: 768px){.header-title{-webkit-box-flex:0;flex:0 0 66.66667%;max-width:66.66667%}}.header-button{display:none;text-align:right}.header-links{position:relative;width:100%;padding-right:15px;padding-left:15px;-webkit-box-flex:0;flex:0 0 100%;max-width:100%;text-align:right}@media (min-width: 768px){.header-links{-webkit-box-flex:0;flex:0 0 33.33333%;max-width:33.33333%}}.header-links li{list-style-type:none}.small-links,.large-links{display:block;padding:0}.small-links li,.large-links li{display:inline-block;margin-left:.5rem}.small-links{font-size:80%}.menu-close{display:none}body.fancy header{background-color:unset;color:#222}body.fancy header a{color:#1d808b}body.fancy header a:hover{color:#1d808b}body.fancy .header-title{position:relative;width:100%;padding-right:15px;padding-left:15px;-webkit-box-flex:0;flex:0 0 66.66667%;max-width:66.66667%}@media (min-width: 768px){body.fancy .header-title{-webkit-box-flex:0;flex:0 0 50%;max-width:50%}}body.fancy .header-button{position:relative;width:100%;padding-right:15px;padding-left:15px;-webkit-box-flex:0;flex:0 0 33.33333%;max-width:33.33333%;display:block}@media (min-width: 768px){body.fancy .header-button{display:none}}body.fancy .header-links{display:none}@media (min-width: 768px){body.fancy .header-links{display:block;-webkit-box-flex:0;flex:0 0 50%;max-width:50%}}body.fancy .above-fold{min-height:100vh;margin-top:calc(-240px - 1rem)}body.fancy .below-fold{background-color:#fff}body.fancy.index{background-color:#222222}body.fancy.index header{min-height:240px;color:#fff}body.fancy.index header a{color:#fff}body.fancy.index header a:hover{color:#fff}footer a{color:#fff;text-decoration:underline}.collapse-pane{border-radius:0.375rem}*+.collapse-pane{margin-top:1rem}.collapse-pane-header{background-color:#1d808b;color:#fff;border-radius:0.375rem;padding:0.375rem 0.75rem;display:-webkit-box;display:flex}.collapse-pane-header>*{-webkit-box-flex:1;flex-grow:1}.collapse-pane-header::after{content:"";margin-top:10px;margin-right:0;vertical-align:.255em;border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.collapse-pane-content{padding:1rem;border:1px #ced4da solid;border-radius:0.375rem}.btn-icon{background-repeat:no-repeat;background-size:24px 24px;background-position:12px 7px;height:38px;width:48px}.btn-icon.btn-lg{background-size:24px 24px;background-position:12px 12px;width:48px;height:48px}.btn-icon.menu-open{background-image:url("/static/images/interface/menu.svg");background-color:rgba(255,255,255,0.7)}.btn-icon.search{background-image:url("/static/images/interface/search.svg")}.btn-icon.help{background-image:url("/static/images/interface/help.svg");background-color:#fff}.btn-icon.pv-bigger{background-image:url("/static/images/interface/pv-bigger.svg")}.btn-icon.pv-smaller{background-image:url("/static/images/interface/pv-smaller.svg")}.btn-icon.pv-rotate-left{background-image:url("/static/images/interface/pv-rotate-left.svg")}.btn-icon.pv-rotate-right{background-image:url("/static/images/interface/pv-rotate-right.svg")}.btn-icon.pv-page-first{background-image:url("/static/images/interface/pv-page-first.svg")}.btn-icon.pv-page-previous{background-image:url("/static/images/interface/pv-page-previous.svg")}.btn-icon.pv-page-next{background-image:url("/static/images/interface/pv-page-next.svg")}.btn-icon.pv-page-last{background-image:url("/static/images/interface/pv-page-last.svg")}.btn-icon.pv-download-full{background-image:url("/static/images/interface/pv-download-full.svg")}.btn-icon.pv-tags{background-image:url("/static/images/interface/pv-tags.svg")}#pvComponent{position:absolute;top:0px;right:-1px;max-height:210px;overflow-y:auto;width:372px;background-color:rgba(255,255,255,0.95);border:2px solid #1d808b}#pvComponent .tags{margin-bottom:0}#pvComponent .tags li{display:inline-block}#pvComponentContainer,#pvComponentLoading{padding-top:9px;clear:both}#pvPane{position:relative}#pvPane .loading{position:absolute;top:10px;left:90px;background-color:#1d808b;border-radius:5px;color:#fff}#pvImageInner{overflow:auto;-webkit-overflow-scrolling:touch;background-color:#eee}#pvImg{max-width:none;display:block;margin:0 auto}.pv-imagelink{position:absolute;width:80px;top:0px;height:100%;display:block;background-color:#ced4da;color:#fff;font-size:xx-large}.pv-imagelink:hover{color:#fff;text-decoration:none}.pv-imagelink .pv-imagelink-text{position:absolute;top:50%;display:block;margin:0 auto}.pv-imagelink-left{left:0px}.pv-imagelink-left .pv-imagelink-text{left:30px}.pv-imagelink-right{right:0px}.pv-imagelink-right .pv-imagelink-text{right:30px}#headerTitle{max-width:360px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
