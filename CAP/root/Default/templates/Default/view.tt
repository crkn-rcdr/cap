[%
  # view.tt
  #
  #   This template is generally called to handle show/* requests.
  #   (Yes, there is a name mismatch that should be rectified.)

  IF response.item.doc.type == 'issue';
    record = response.item.ancestors.first;
  ELSE;
    record = response.item.doc;
  END;

  USE XML.Escape;
%]

[% INCLUDE component/header.tt; %]
  
<div id="content">

  <div>
    <a href="[% c.uri_for(root, 'search', c.session.search.start, c.session.search.params) | xml_escape %]">[% c.loc("Back to search results") | xml_escape %]</a>
  </div>

  <h1>
    [% response.item.doc.label | xml_escape %]
    [% IF response.item.doc.label != response.item.doc.clabel %]
      - [% response.item.doc.clabel | xml_escape %]
    [% END %]
  </h1>

  [% IF response.item.doc.type == 'issue' %]
    <div>
      [% c.loc("Issue [_1] of [_2] available issues", response.item.position, response.item.counts.siblings) %]
      <a href="[% c.uri_for(root, 'search', { type => 'issue', pkey => response.item.doc.pkey, so => 'pubmin asc', t => 'all' }) | xml_escape %]">
        [% c.loc("Show all issues") | xml_escape %]
      </a>
      <a href="[% c.uri_for(root, 'show', response.item.doc.pkey) %]">
        [% c.loc("Show serial record") | xml_escape %]
      </a>
    </div>
  [% ELSIF response.item.counts.issues > 0 %]
    <div>
      [% c.loc("[_1] issues available", response.item.counts.issues) | xml_escape %]
      <a href="[% c.uri_for(root, 'search', { pkey => response.item.doc.key, so => 'pubmin asc' }) %]">
        [% c.loc("Show all issues") | xml_escape %]
      </a>
    </div>
  [% END %]

  [%
    INCLUDE component/subsearch.tt;
    INCLUDE component/bibrecord.tt;
  %]

</div>

[% INCLUDE component/footer.tt; %]

<pre>
</pre>

