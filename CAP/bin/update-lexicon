#!/usr/bin/perl -Ilib
use strict;
use warnings;
use Locale::Maketext::Extract;
use Locale::Maketext::Extract::Plugin::TT2;
use CAP::Schema;

my $schema = CAP::Schema->connect('dbi:mysql:cap', 'cap', '');

my $language = 'fr';
my $path = 'Default';


my $extract = Locale::Maketext::Extract->new(
    # plugins => { tt2 => [ 'tt2', 'tt' ] },
    warnings => 1,
    verbose => 3,
);

foreach my $file (@ARGV) {
    $extract->extract_file($file);
}
$extract->normalize_space;

foreach my $message (keys(%{$extract->entries})) {
    print "\n\n$message:\n";
    my @note = ();
    foreach my $loc (@{$extract->entries->{$message}}) {
        my $var = "";
        $var =  " (variable: $loc->[2])" if ($loc->[2]);
        push(@note, "$loc->[0] line $loc->[1] $var");
    }
    my $notes = (join("; ", @note));
    print $notes . "\n";

    my $result = $schema->resultset('Lexicon')->find({ 'message' => { '=' => $message } });
    if ($result) {
        print("EXISTS\n");
    }
    else {
        print("New\n");
        $schema->resultset('Lexicon')->create({
            language => $language,
            path => $path,
            message => $message,
            notes => $notes,
        });
    }
}
