# This is a sample file.  Please copy to a name you won't check into git,
# and modify for your own usage.  Update your docker-compose.override.yml
# to reference your own copy.

# How to run haproxy docker image at https://hub.docker.com/_/haproxy
# Documentation on this config file at: http://cbonte.github.io/haproxy-dconv/2.1/configuration.html

# Test config with command similar to:
# docker run -it --rm -v /home/russell/git/cap/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro --name haproxy-syntax-check haproxy:2.1.2-alpine haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg


global
  tune.ssl.default-dh-param 4096
  # Next few lines:
  # generated 2020-02-07, Mozilla Guideline v5.4, HAProxy 2.1, OpenSSL 1.1.1d, intermediate configuration
  # https://ssl-config.mozilla.org/#server=haproxy&version=2.1&config=intermediate&openssl=1.1.1d&guideline=5.4
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
  mode http
  timeout connect 5000ms
  timeout client 50000ms
  timeout server 50000ms

frontend public
  bind :80
  # Uncomment and point to file with key and certificate together.
  #bind :443 ssl crt /usr/local/etc/haproxy/crt/__canadiana_ca.pem alpn h2,http/1.1

  # HSTS (63072000 seconds)
  # Not yet -- this will suggest browser stay on https...
  # https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it/
  #http-response set-header Strict-Transport-Security max-age=63072000

  # These are the headers the apps need to look at...
  option forwardfor
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  http-request set-header X-Forwarded-Proto http if !{ ssl_fc }

  acl is_unused_dom hdr_dom(host) -i online.canadiana.ca eco.canadiana.ca enligne.canadiana.ca canadianaonline.ca www.canadianaonline.ca canadianaenligne.ca www.canadianaenligne.ca whf.canadiana.ca 1812.canadiana.ca
  http-request redirect code 301 location http://www.canadiana.ca/%[capture.req.uri] if is_unused_dom

  acl is_gac hdr_dom(host) -i dfait-aeci.canadiana.ca
  http-request redirect code 301 location http://gac.canadiana.ca/%[capture.req.uri] if is_gac

  default_backend cap

  # Cantaloupe image server
  acl is_image hdr_dom(host) -i -m beg image. image-
  acl is_image_api path_beg -i /status /configuration /tasks
  http-request deny if is_image is_image_api

  use_backend cantaloupe if is_image

  # Content Distribution (from CouchDB).
  acl is_cdn hdr_dom(host) -i -m beg cdn.

  # Redirects handled for old domain
  acl is_org hdr_dom(host) -i -m end canadiana.org

  acl is_static path_beg -i /cihm-error/ /schema /standards/
  use_backend apache if is_org || is_cdn || is_static


backend apache
  server local_apache 10.201.1.14:80

backend cantaloupe
  server local_cap 10.201.1.14:8182

backend cap
  server local_cap 10.201.1.14:3011
